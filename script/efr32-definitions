#!/bin/bash

script_dir="$(dirname "$(realpath "$0")")"
repo_dir="$(dirname "$script_dir")"

efr32_get_platforms()
{
    if [ $# -ne 0 ]; then
        printf "Gets a list of platforms\n\nUsage: %s\n" $(basename $0) >&2
        return 1
    fi

    cd $repo_dir/src/
    local platforms=(*efr32*/)
    echo "${platforms[@]%/}"
}

efr32_check_platform()
{
    # Checks if a value is a valid efr32 platform
    #
    # Arg $1 -- value
    if [ -z $1 ] || [ $# -ne 1 ]; then
        printf "Checks if a value is a valid efr32 platform\n\nUsage: %s <value> \n" $(basename $0) >&2
        return 1
    fi

    local platform="$1"
    local platforms=$(efr32_get_platforms)

    if [[ ! " ${platforms[@]} " =~ " $platform " ]]; then
        printf "ERROR: Invalid platform\nValid platforms:   ${platforms[@]}\n" >&2
        return 2
    fi
    return 0
}

efr32_get_boards()
{
    # Gets a list of boards for a given platform
    #
    # Arg $1 -- efr32 platform
    if [ -z $1 ] || [ $# -ne 1 ]; then
        printf "Gets a list of boards for a given platform\n\nUsage: %s <efr32_platform> \n" $(basename $0) >&2
        return 1
    fi

    local platform="$1"

    efr32_check_platform "$platform" \
        && local platform_dir="$repo_dir/src/$platform" \
        && find $platform_dir -type d -name 'brd*' -exec basename {} \; | sort
}

efr32_get_jlink_device()
{
    # Gets the J-Link device type for a efr32 platform
    #
    # Arg $1 -- efr32 platform
    if [ -z $1 ] || [ $# -ne 1 ]; then
        printf "Gets the J-Link device type for a efr32 platform\n\nUsage: %s <efr32_platform> \n" $(basename $0) >&2
        return 1
    fi

    local platform="$1"
    efr32_check_platform $platform \
        && case $platform in
            "efr32mg1")
                echo "EFR32MG1PxxxF256"
                ;;
            "efr32mg12")
                echo "EFR32MG12PxxxF1024"
                ;;
            "efr32mg13")
                echo "EFR32MG13PxxxF1024"
                ;;
            "efr32mg21")
                echo "EFR32MG21AxxxF1024"
                ;;
        esac
}
