#
#  Copyright (c) 2023, The OpenThread Authors.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#

project_name: example_vendor-rcp-uart
label: ot-efr32
package: openthread
description: This is the platform project that will enable the ot-efr32 repo on GitHub to generate a CMake library for EFR32 RCPs which communicate over UART interface.
category: OpenThread Examples
quality: production

component:
  - id: sl_main
  - id: sl_main_custom_main
  - id: ot_platform_abstraction_core
  - id: ot_headers
    from: ot-efr32
  - id: ot_mbedtls
  - id: ot_stack_features_config
    from: ot-efr32
  - id: iostream_usart
    instance:
      - vcom
    condition:
      - device_series_2
  - id: iostream_eusart
    instance:
      - vcom
    condition:
      - device_series_3
  - id: rail_util_pti
  - id: ot_reset_utils

configuration:
  - name: SL_MAIN_START_TASK_STACK_SIZE_BYTES
    value: 2752
    condition: [sl_main]
  - name: SL_BOARD_ENABLE_VCOM
    value: 1
  # By default, OTBR is configured to work with 460800 baud rate on UART
  - name: SL_IOSTREAM_USART_VCOM_BAUDRATE
    value: 460800
    condition: [iostream_usart]
  - name: SL_IOSTREAM_EUSART_VCOM_BAUDRATE
    value: 460800
    condition: [iostream_eusart]
  - name: CIRCULAR_QUEUE_LEN_MAX
    value: 16
  - name: SL_IOSTREAM_USART_VCOM_FLOW_CONTROL_TYPE
    value: usartHwFlowControlCtsAndRts
    condition: [iostream_usart]
  - name: SL_IOSTREAM_EUSART_VCOM_FLOW_CONTROL_TYPE
    value: SL_IOSTREAM_EUSART_UART_FLOW_CTRL_CTS_RTS
    condition: [iostream_eusart]
  - name: SL_OPENTHREAD_STACK_TASK_MEM_SIZE
    value: 4608
  - name: SL_STACK_SIZE
    value: 0x800
    condition: [kernel]

define:
  - name: OPENTHREAD_RADIO
    value: 1
