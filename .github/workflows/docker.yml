#
#  Copyright (c) 2023, The OpenThread Authors.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#

name: Docker

on:
  workflow_call:

env:
  DOCKER_IMAGE_SHA_TAG: siliconlabsinc/ot-efr32-dev:${{ github.sha }}
  DOCKER_IMAGE_LATEST_TAG: siliconlabsinc/ot-efr32-dev:latest

jobs:
  metadata:
    uses: ./.github/workflows/metadata.yml

  build:
    name: Build
    runs-on: ubuntu-22.04
    needs: metadata
    permissions:
      contents: read
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@0d381219ddf674d61a7572ddd19d7941e271515c # v2.9.0
      with:
        egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        submodules: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@4fd812986e6c8c2a69e18311145f9371337f27d4 # v3.4.0
      with:
        platforms: linux/amd64

    - name: Build and export to Docker context
      uses: docker/build-push-action@v6
      with:
        build-args: |
          BUILD_DATE=${{ needs.metadata.outputs.date }}
        context: .
        file: docker/Dockerfile
        load: true
        tags: |
          ${{ env.DOCKER_IMAGE_SHA_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Inspect Docker image
      run: docker inspect ${{ env.DOCKER_IMAGE_SHA_TAG }}

    - name: Container image sanity checks
      run: |
        # Download container-structure-test
        curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64 \
          && chmod +x container-structure-test-linux-amd64

        # Run tests
        ./container-structure-test-linux-amd64 test --config docker/test-ot-efr32-dev.yml --image ${{ env.DOCKER_IMAGE_SHA_TAG }}

    - name: Export Docker image
      run: docker save -o ot-efr32-dev.tar ${{ env.DOCKER_IMAGE_SHA_TAG }}

    - name: Upload Docker image
      uses: actions/upload-artifact@v4
      with:
        name: ot-efr32-dev
        path: ot-efr32-dev.tar

  publish-dockerhub:
    name: Tag `latest` and publish to DockerHub
    runs-on: ubuntu-22.04
    needs: [metadata, build]
    if: |
      github.repository == 'SiliconLabs/ot-efr32' &&
      github.event_name != 'pull_request' &&
      github.ref == 'refs/heads/main'
    steps:
      - name: Login to DockerHub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: ot-efr32-dev

      - name: Load Docker image
        run: docker load -i ot-efr32-dev.tar

      - name: Tag Docker image
        run: |
          docker tag ${{ env.DOCKER_IMAGE_SHA_TAG }} ${{ env.DOCKER_IMAGE_LATEST_TAG }}

      - name: Push Docker image
        run: |
          docker push ${{ env.DOCKER_IMAGE_LATEST_TAG }}
