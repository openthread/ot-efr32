#
#  Copyright (c) 2023, The OpenThread Authors.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#

name: Docker

env:
  artifact_name: ot-efr32-dev
  image_name: ot-efr32-dev-${{ github.sha }}

on:
  workflow_call:
    outputs:
      artifact_name:
        description: 'The name of the artifact containing the docker image'
        value: ${{ jobs.build.outputs.artifact_name }}
      image_name:
        description: 'The name of the docker image'
        value: ${{ jobs.build.outputs.image_name}}

jobs:
  metadata:
    uses: ./.github/workflows/metadata.yml

  build:
    name: Build
    runs-on: ubuntu-22.04
    needs: metadata
    permissions:
      contents: read
    outputs:
      artifact_name: ${{ env.artifact_name }}
      image_name: ${{ env.image_name }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
      with:
        egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        submodules: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1
      with:
        platforms: linux/amd64

    - name: Build and export to Docker context
      uses: docker/build-push-action@v6
      with:
        build-args: |
          BUILD_DATE=${{ needs.metadata.outputs.date }}
        context: .
        file: docker/Dockerfile
        load: true
        tags: |
          ${{ env.image_name }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Inspect Docker image
      run: docker inspect ${{ env.image_name }}

    - name: Container image sanity checks
      run: |
        # Download container-structure-test
        curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64 \
          && chmod +x container-structure-test-linux-amd64

        # Run tests
        ./container-structure-test-linux-amd64 test --config docker/test-ot-efr32-dev.yml --image ${{ env.image_name }}

    - name: Export Docker image
      run: docker save -o ${{ env.image_name }}.tar ${{ env.image_name }}

    - name: Upload Docker image
      id: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.artifact_name }}
        path: ${{ env.image_name }}.tar
